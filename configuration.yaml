homeassistant:
  auth_providers:
    - type: homeassistant
    - type: trusted_networks
      trusted_networks:
        - 10.43.0.0/16
        - 10.20.0.52/32
    # - type: legacy_api_password
    #   api_password: !secret http_password
  customize:
    sensor.humidity:
      icon: mdi:water-percent
  name: Home
  latitude: !secret latitude
  longitude: !secret longitude
  elevation: 0
  unit_system: metric
  time_zone: Europe/London

recorder:
  purge_keep_days: 5
  db_url: !secret db_url
  exclude:
    domains:
      - device_tracker

influxdb:
  host: influxdb.monitoring.svc.cluster.local
  port: 8086
  database: home_assistant
  username: admin
  password: !secret influxdb_password

system_health:

logger:
  default: info
  logs:
    requests.packages.urllib3.connectionpool: critical
    homeassistant.components.alexa: info

frontend:

config:

http:
  server_host: 0.0.0.0
  ip_ban_enabled: true
  login_attempts_threshold: 5
  use_x_forwarded_for: true
  trusted_proxies:
    - "0.0.0.0/0"
    - 127.0.0.1
    - ::1

history:

logbook:

sun:

weather:
  - platform: darksky
    api_key: !secret darksky_apikey
    mode: daily

sensor:
  - platform: darksky
    api_key: !secret darksky_apikey
    monitored_conditions:
      - summary
      - precip_probability
      - temperature
      - wind_speed
      - humidity
  - platform: template
    sensors:
      habitica_gold_round:
        value_template: "{{ states('sensor.habitica_russell_gp') | round(2) }}"
  - platform: template
    sensors:
      habitica_hp_round:
        value_template: "{{ states('sensor.habitica_russell_hp') | round(2) }}"
  - platform: template
    sensors:
      habitica_mp_round:
        value_template: "{{ states('sensor.habitica_russell_mp') | round(2) }}"
  - platform: template
    sensors:
      habitica_level_perc:
        value_template: "{{ (states('sensor.habitica_russell_exp') | float / states('sensor.habitica_russell_tonextlevel') | float * 100) | round(2) }}"
        unit_of_measurement: "%"
  - platform: template
    sensors:
      energy_peak_cost:
        value_template: "{{ (states('sensor.daily_energy_peak') | float * 0.2199) | round(2) }}"
  - platform: template
    sensors:
      energy_offpeak_cost:
        value_template: "{{ (states('sensor.daily_energy_offpeak') | float * 0.1554) | round(2) }}"

group: !include groups.yaml
automation: !include automations.yaml

mqtt:
  broker: emqx-headless.default.svc
  port: 1883
  username: mqtt
  password: !secret mqtt_password
  discovery: true
  discovery_prefix: homeassistant
  birth_message:
    topic: 'homeassistant/status'
    payload: 'online'
  will_message:
    topic: 'homeassistant/status'
    payload: 'offline'

notify:
  - platform: pushbullet
    api_key: !secret pushbullet_apikey
    
light:
  - platform: mqtt
    schema: json
    name: 'Hallway'
    state_topic: 'AiLight-188593'
    command_topic: 'AiLight-188593/set'
    color_temp: true
    brightness: true
    rgb: true
    white_value: true
    effect: false
    optimistic: false

#camera:
#  - platform: ffmpeg
#    name: Sonoff
#    input: !secret rtsp_url

tplink:
  discovery: false
  switch:
    - host: 192.168.1.68

alexa:
  smart_home:
    locale: en-GB
    endpoint: https://api.eu.amazonalexa.com/v3/events
    client_id: !secret alexa_client_id
    client_secret: !secret alexa_client_secret
    filter:
      include_domains:
        - light
      include_entities:
        - sensor.landing_temperature
        - sensor.upstairs_temperature
        - sensor.temperature_humidity_sensor_temperature
        - sensor.bme680_temperature
      # include_entity_globs:
      #   - sensor.*_temp
    entity_config:
      light.office_tradfri_bulb:
        name: "Office Cheese"
        description: "The light in the office controlled by Lambda"

utility_meter:
  daily_energy:
    source: sensor.electric_consumption_today
    name: Daily Energy
    cycle: daily
    tariffs:
      - peak
      - offpeak
  monthly_energy:
    source: sensor.electric_consumption_today
    name: Monthly Energy
    cycle: monthly
    tariffs:
      - peak
      - offpeak

prometheus:
  namespace: hass